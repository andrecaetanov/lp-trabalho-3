#lang racket

; André Caetano Vidal   201665010AC
; Bernardo Souza Abreu Cruz 201635019

; Environment :: variáveis -> valores
; interface
; (empty-env) ====> construtores
; (extend-env var value env) ====> construtores
; (apply-env env var) ====> obtém informações / observer

; Implementação
; Env ::= (empty-env) | (extend-env Symbol RacketValue Env)
(define empty-env '(empty-env))

(define (extend-env var value env)
  (list 'extend-env var value env))
  
(define (apply-env env var)
  (if (equal? 'empty-env (car env)) #f
      (if (equal? var (cadr env)) (caddr env)
          (apply-env (cadddr env) var))))

; Exemplo
(define env (extend-env 'd 6
                        (extend-env 'a 1
                                    empty-env)))